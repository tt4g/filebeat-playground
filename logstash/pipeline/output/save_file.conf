input {
  pipeline {
    address => "output_save_file"
  }
}

filter {
  grok {
    id => "output_save_file_suffix_filter"
    enable_metric => true
    match => {
        "message" => "%{NOTSPACE:message_suffix}%{SPACE}%{GREEDYDATA}"
    }
    break_on_match => true
    overwrite => []
    keep_empty_captures => false
    named_captures_only => true
    pattern_definitions => {}
    patterns_dir => []
    patterns_files_glob => "*"
    tag_on_failure => ["_grokparsefailure"]
    tag_on_timeout => "_groktimeout"
    timeout_millis => 30000
  }
}

output {
  file {
    id => "output_save_file"
    path => "/var/log/logstash/sample_logstash_file/sample-%{+YYYY-MM-dd}.txt"
    codec => line { format => "[message] %{message} [suffix] %{message_suffix}" }
    enable_metric => true
    create_if_deleted => true
    dir_mode => 0755
    file_mode => 0755
    filename_failure => "_filepath_failures"
    flush_interval => 1
    write_behavior => "append"
  }
}
